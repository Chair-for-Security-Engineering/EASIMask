package Cryptol.KECCAK

import spinal.core._

class Iota800 extends Component {
	val io = new Bundle {
		val iotaIn 	= in  Bits(800 bits)
		val round		= in  UInt(5 bits)
		val iotaOut = out Bits(800 bits)
	}
	
	val roundConstant = Bits(64 bits)
	
	roundConstant := io.round.mux(
		0 -> (B"64'x0000000000000001"),
		1 -> (B"64'x0000000000008082"),
		2 -> (B"64'x800000000000808A"),
		3 -> (B"64'x8000000080008000"),
		4 -> (B"64'x000000000000808B"),
		5 -> (B"64'x0000000080000001"),
		6 -> (B"64'x8000000080008081"),
		7 -> (B"64'x8000000000008009"),
		8 -> (B"64'x000000000000008A"),
		9 -> (B"64'x0000000000000088"),
		10 -> (B"64'x0000000080008009"),
		11 -> (B"64'x000000008000000A"),
		12 -> (B"64'x000000008000808B"),
		13 -> (B"64'x800000000000008B"),
		14 -> (B"64'x8000000000008089"),
		15 -> (B"64'x8000000000008003"),
		16 -> (B"64'x8000000000008002"),
		17 -> (B"64'x8000000000000080"),
		18 -> (B"64'x000000000000800A"),
		19 -> (B"64'x800000008000000A"),
		20 -> (B"64'x8000000080008081"),
		21 -> (B"64'x8000000000008080"),
		22 -> (B"64'x0000000080000001"),
		23 -> (B"64'x8000000080008008"),
		default -> (B(0))
	)
	
	io.iotaOut := (io.iotaIn(799 downto 768) ^ roundConstant(31 downto 0)) ## io.iotaIn(767 downto 0)
}

class Iota400 extends Component {
	val io = new Bundle {
		val iotaIn 	= in  Bits(400 bits)
		val round		= in  UInt(5 bits)
		val iotaOut = out Bits(400 bits)
	}
	
	val roundConstant = Bits(64 bits)
	
	roundConstant := io.round.mux(
		0 -> (B"64'x0000000000000001"),
		1 -> (B"64'x0000000000008082"),
		2 -> (B"64'x800000000000808A"),
		3 -> (B"64'x8000000080008000"),
		4 -> (B"64'x000000000000808B"),
		5 -> (B"64'x0000000080000001"),
		6 -> (B"64'x8000000080008081"),
		7 -> (B"64'x8000000000008009"),
		8 -> (B"64'x000000000000008A"),
		9 -> (B"64'x0000000000000088"),
		10 -> (B"64'x0000000080008009"),
		11 -> (B"64'x000000008000000A"),
		12 -> (B"64'x000000008000808B"),
		13 -> (B"64'x800000000000008B"),
		14 -> (B"64'x8000000000008089"),
		15 -> (B"64'x8000000000008003"),
		16 -> (B"64'x8000000000008002"),
		17 -> (B"64'x8000000000000080"),
		18 -> (B"64'x000000000000800A"),
		19 -> (B"64'x800000008000000A"),
		20 -> (B"64'x8000000080008081"),
		21 -> (B"64'x8000000000008080"),
		22 -> (B"64'x0000000080000001"),
		23 -> (B"64'x8000000080008008"),
		default -> (B(0))
	)
	
	io.iotaOut := (io.iotaIn(399 downto 384) ^ roundConstant(15 downto 0)) ## io.iotaIn(383 downto 0)
}

class Iota extends Component {
	val io = new Bundle {
		val iotaIn 	= in  Bits(1600 bits)
		val round		= in  UInt(5 bits)
		val iotaOut = out Bits(1600 bits)
	}
	
	val roundConstant = Bits(64 bits)
	
	roundConstant := io.round.mux(
		0 -> (B"64'x0000000000000001"),
		1 -> (B"64'x0000000000008082"),
		2 -> (B"64'x800000000000808A"),
		3 -> (B"64'x8000000080008000"),
		4 -> (B"64'x000000000000808B"),
		5 -> (B"64'x0000000080000001"),
		6 -> (B"64'x8000000080008081"),
		7 -> (B"64'x8000000000008009"),
		8 -> (B"64'x000000000000008A"),
		9 -> (B"64'x0000000000000088"),
		10 -> (B"64'x0000000080008009"),
		11 -> (B"64'x000000008000000A"),
		12 -> (B"64'x000000008000808B"),
		13 -> (B"64'x800000000000008B"),
		14 -> (B"64'x8000000000008089"),
		15 -> (B"64'x8000000000008003"),
		16 -> (B"64'x8000000000008002"),
		17 -> (B"64'x8000000000000080"),
		18 -> (B"64'x000000000000800A"),
		19 -> (B"64'x800000008000000A"),
		20 -> (B"64'x8000000080008081"),
		21 -> (B"64'x8000000000008080"),
		22 -> (B"64'x0000000080000001"),
		23 -> (B"64'x8000000080008008"),
		default -> (B(0))
	)
	
	io.iotaOut := (io.iotaIn(1599 downto 1536) ^ roundConstant) ## io.iotaIn(1535 downto 0)
}